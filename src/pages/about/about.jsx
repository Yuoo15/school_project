import styles from './about.module.css'
export default()=>{
    return(
        <>
            <div className={styles.about}>
                <h1 className={styles.h1}>О проекте</h1>
                <p>Сайт School Scheduler направлен на создание здоровой образовательной среды за счёт цифровизации школьного расписания.
Благодаря системе планирования, сайт помогает уменьшить психоэмоциональную нагрузку учащихся и педагогов,
снизить стресс и утомляемость, а также рационально распределить учебное время.
Это способствует улучшению психологического здоровья школьников и формированию комфортных условий обучения.</p>
                <h1 className={styles.h1}>Автоматизированный конструктор школьного расписания</h1>
                <p className={styles.p}>Быстро составляйте корректные и удобные расписания с учётом часов по предметам, нагрузки, особенностей по возрасту и требований СанПиН — без Excel и бессонных ночей.</p>
                <p className={styles.p}>Наш инструмент помогает завучу и учителям создавать готовые расписания за пару кликов: вводите классы, предметы и часы, настраиваете правила (максимум уроков в день, запрет тяжёлых подряд и т. п.) — и получаете готовую сетку по дням. Можете править вручную</p>
                <br/>
                <h1 className={styles.h1}>Как это работает — пошагово (пользовательский путь)</h1>
                <ul>
                    <li>Добавьте данные: классы (11А, 7Б), предметы (название + часы в неделю), учителей (и предметы, которые они ведут).</li>
                    <li>Настройте правила: выберите количество уроков в день и ограничения СанПиН.</li>
                    <li>Нажмите «Сгенерировать» — система автоматически заполнит сетку.</li>
                    <li>Проверьте и поправьте</li>
                </ul>
                <br />
                <h1 className={styles.h1}>Технические заметки (коротко и понятно)</h1>
                <ul>
                    <li>Работает без сервера (front-end): данные хранятся в localStorage — удобно для прототипа или одной школы.</li>
                    <li>Опция бэкенда: можно подключить FastAPI/Django + Postgres для хранения, аккаунтов и нескольких школ.</li>
                    <li>Безопасность: если подключать сервер — используем авторизацию и SSL; при фронтенде — данные остаются в браузере пользователя.</li>
                </ul><br />

                <h1 className={styles.h1}>Разработчик</h1>
                <p className={styles.p}>Рамазан Кантаев, ученик 11 класса, разработчик-любитель.
                    <br /><br /> Портфолио: <a href="https://new-portfolio-ruby-three.vercel.app" target="_blank" rel="noreferrer">Перейти</a>, <br />GitHub: <a href="https://github.com/Yuoo15" target="_blank" rel="noreferrer">Перейти</a></p>




                <h1 className={styles.h1}>Заметки программиста</h1>
                <p>Этот проект был создан с использованием React для фронтенда и предназначен для работы без сервера, сохраняя данные в localStorage браузера. Это упрощает развертывание и использование, особенно для прототипов или небольших школ. В будущем можно рассмотреть возможность добавления бэкенда на FastAPI или Django с базой данных Postgres для поддержки нескольких школ и управления аккаунтами пользователей.</p>
                <p>Безопасность данных обеспечивается за счёт хранения их локально в браузере пользователя. Если будет реализован сервер, планируется использовать авторизацию и SSL для защиты информации.</p>
                <ul>
                    <h4>Неделя 1</h4>
                    <li>День 1: Создал базовый сайт для НОУ. Есть 5 страниц: Home, Классы, учителя, предметы, расписание, настройки. Генератор очень сырой</li>
                    <li>День 2: Добавил css стилей для страниц. Сайт стал более удобным. </li>
                    <li>День 3: Добавил адаптивность под телефон</li>
                    <li>День 4: исправил Css стили в некоторых страницах</li>
                    <li>День 5: Добавил анимации на главной странице</li>
                    <li>День 6: Ничего, выгорел</li>
                    <li>День 7: ничего</li>
                    <h4>Неделя 2</h4>
                    <li>День 1:ничего </li>
                    <li>День 2:ничего </li>
                    <li>День 3:ничего </li>
                    <li>День 4:ничего </li>
                    <li>День 5:Подключил React router, Добавил регистрацию, добавил личный кабинет ученика(страница сырая и c багами)</li>
                    <li>День 6: добавил стили и валидацию для страницы Login</li>
                    <li>День 7:ничего </li>
                    <h4>Неделя 3</h4>
                    <li>День 1: Добавил React hook form для страницы Login</li>
                    <li>День 2: Добавил стили для страницы учеников(Все также сыро)</li>
                    <li>День 3: ГЛОБАЛЬНОЕ УЛУЧШЕНИЕ - улучшение страницы Учеников(Новые стили, добавление одноклассников), добавление личного кабинета для учителей, настройки в админ панеле стали теперь профилем для Администрации, Возможность изменять или удалять учителей для Администрации</li>
                    <li>День 4: Новый алгоритм стал более умным который теперь учитывает занятость учителей</li>
                </ul>
            </div>
        </>
    )
}